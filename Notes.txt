Servlet:
    - Servlet is an API which is used to build Web application
    - Servlet is a piece of code which will be present inside Server.
    - Servlet takes the Request, processes it and Produces the Response.
    - Servlet is an Interface present inside javax.servlet package.
    - We can create our own servlet by creating a Class and implementing it to Servlet Interface and overriding all the methods of Servlet.
    - Our own main logic should be return inside service() method, because service() method is the one which takes Request and Produces Response.

Methods of Servlet: 
    1. public void init();
    2. public void Servic(req,res);
    3. public void destroy();
    4. public ServletConfig getServletConfig();

Generic Servlet:
    - Generic Servlet is an abstract class present inside javax.Servlet package.
    - It is a sub-Class of Servlet Interface.
    - If we want to create our own servlet(Generic Servlet) we need to create a Class and extend that Class to Generic Servlet and override the Service() Method.
        because in Generic servlet all the methods Servlet Interface is overriden except Service() method.
    Servlet
        ^
        |
        |
    GenericServlet
        ^
        |
    MyServlet

Methods of GenericServlet:
    1. ServletContext getServletContext()
    2. public void Service(req,res); abstract method.
    3. String getInitParameters()
    4. String getInitParametersName()

Creating GenericServlet:

Providing URL for Created Servlet:
    - We can provide URL to the servlet using two ways:
        1. using Servlet tag and servlet-mapping tag in web.xml
        2. using @WebServlet("/URL") annotation in Java servlet Class.
note: among two ways we have to follow anyone either using servlet tag or using @WebServlet() annotation, Dont use both.
    - To Print content on the browser we use PrintWriter Object.

HTTPServlet :
    - HTTPServlet is an abstract sub-class of GenericServlet present inside javax.servlet.http package.
    - Inside HTTPServlet all the methods of Servlet Interface has been overriden including Service() method.
    - Then also they made it abstract to avoid direct Object creation.
    - To create our own HTTPServlet, create a Class and extend that Class to HTTPServlet and override any one of the methods of HTTPServlet.
    - HTTPServlet is used to handle HTTP Request and HTTP Response.
    Servlet
        ^
        |
        |
    GenericServlet
        ^
        |
    HTTPServlet
        ^
        |
    MyServlet

Methods of HTTPServlet :
    1. public void Service(ServletRequest req, ServletRequest res)
    2. protected void Service(HttpServletRequest req, HttpServletResponse res)
    3. protected void doPost(HttpServletRequest req, HttpServletResponse res)
    4. protected void doGet(HttpServletRequest req, HttpServletResponse res)
    5. protected void doPut(HttpServletRequest req, HttpServletResponse res)
    6. protected void doDelete(HttpServletRequest req, HttpServletResponse res)
    7. protected void doHead(HttpServletRequest req, HttpServletResponse res)


Reading HTML form data inside HTTPServlet:
    - To read HTML form data inside HttpServlet we need to provide URL of servlet inside form action="URL" and call req.getParameter(input field name) method by passing input field name.



